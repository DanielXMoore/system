// TODO: https://github.com/johnie/esbuild-coffeescript/pull/4
declare module "esbuild-coffeescript" {
  type Build = import("esbuild").PluginBuild
  interface Options {
    /**
     * If true, output the source map as a base64-encoded string in a comment at the bottom.
     */
    inlineMap?: boolean
    /**
     * The filename to use for the source map. It can include a path (relative or absolute).
     */
    filename?: string
    /**
     * If true, output without the top-level function safety wrapper.
     */
    bare?: boolean
    /**
     * If true, output the Generated by CoffeeScript header.
     */
    header?: boolean
    /**
     * If set, this must be an object with the options to pass to Babel. See Transpilation.
     */
    transpile?: object
    /**
     * If true, return an abstract syntax tree of the input CoffeeScript source code
     */
    ast?: boolean
  }

  function _exports(options?: Options): {
    name: "coffeescript";
    setup: (build: Build) => void;
  };
  export = _exports;
}

// TODO: waiting on https://github.com/DefinitelyTyped/DefinitelyTyped/pull/59995
// This seems a bit complicated but it works
declare namespace Stylus {
  type Static = typeof import("stylus")
  type RenderOptions = import("stylus").RenderOptions
  type RenderCallback = import("stylus").RenderCallback

  interface Enhanced extends Static {
    // TODO: merge this into stylus types?
    render(str: string): string
    render(str: string, options: RenderOptions): string
    render(str: string, callback: RenderCallback): void;
    render(str: string, options: RenderOptions, callback: RenderCallback): void;
  }
}

// Definitely Typed won't type private APIs so we need to augment it ourselves
declare namespace NodeJS {
  interface Module {
    _compile(content: string, filename: string): void
  }
}
